C51 COMPILER V9.06   I2C                                                                   04/14/2015 14:35:01 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN ..\Simulation\I2C.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE I2C.c BROWSE DEBUG OBJECTEXTEND OBJECT(..\Simulation\I2C.obj)

line level    source

   1          #include<reg51.h>
   2          #include "delay.h"
   3          #include "I2C.h"
   4          
   5          // Function Purpose: Produce approximate delay in given uSecs.
   6          void __delay_us(unsigned int d)
   7          {
   8   1         unsigned int  i, limit;
   9   1         limit = d/15;
  10   1      
  11   1         for(i=0;i<limit;i++);
  12   1      }
  13          
  14          
  15          // Function Purpose: Set initial values of SCK and SDA pins
  16          void InitI2C(void)
  17          {       
  18   1              // Make SDA and SCK pins input initially
  19   1              SDA = 1;
  20   1              SCK = 1;
  21   1      }
  22          
  23          
  24          // Function Purpose: I2C_Start sends start bit sequence
  25          void I2C_Start(void)
  26          {
  27   1              Set_SCK_High;                           // Make SCK pin high
  28   1              Set_SDA_High;                           // Make SDA pin High
  29   1              __delay_us(HalfBitDelay);       // Half bit delay
  30   1              Set_SDA_Low;                            // Make SDA Low
  31   1              __delay_us(HalfBitDelay);       // Half bit delay
  32   1      }
  33          
  34          
  35          // Function Purpose: I2C_ReStart sends start bit sequence
  36          void I2C_ReStart(void)
  37          {
  38   1              Set_SCK_Low;                            // Make SCK pin low
  39   1      
  40   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  41   1                                                                      // when it is confirm that SCK is low
  42   1              Set_SDA_High;                           // Make SDA pin High
  43   1              
  44   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  45   1              Set_SCK_High;                           // Make SCK pin high
  46   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  47   1              Set_SDA_Low;                            // Make SDA Low
  48   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  49   1      }
  50          
  51          
  52          //Function : I2C_Stop sends stop bit sequence
  53          void I2C_Stop(void)
  54          {
  55   1              Set_SCK_Low;                            // Make SCK pin low
C51 COMPILER V9.06   I2C                                                                   04/14/2015 14:35:01 PAGE 2   

  56   1      
  57   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  58   1                                                                      // when it is confirm that SCK is low
  59   1              Set_SDA_Low;                            // Make SDA pin low
  60   1              
  61   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  62   1              Set_SCK_High;                           // Make SCK pin high
  63   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  64   1              Set_SDA_High;                           // Make SDA high
  65   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  66   1      }
  67          
  68          
  69          
  70          //Function : I2C_Send_ACK sends ACK bit sequence
  71          //void I2C_Send_ACK(void)
  72          //{
  73          //      Set_SCK_Low;                            // Make SCK pin low
  74          //      __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  75          //                                                              // when it is confirm that SCK is low
  76          //      Set_SDA_Low;                            // Make SDA Low
  77          //      __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  78          //      Set_SCK_High;                           // Make SCK pin high
  79          //      __delay_us(HalfBitDelay);       // Half bit delay
  80          //}
  81          
  82          
  83          //Function : I2C_Send_NACK sends NACK bit sequence
  84          void I2C_Send_NACK(void)
  85          {
  86   1              Set_SCK_Low;                            // Make SCK pin low
  87   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  88   1                                                                      // when it is confirm that SCK is low
  89   1              Set_SDA_High;                           // Make SDA high
  90   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  91   1              Set_SCK_High;                           // Make SCK pin high
  92   1              __delay_us(HalfBitDelay);       // Half bit delay
  93   1      }
  94          
  95          
  96          // Function Purpose: I2C_Write_Byte transfers one byte
  97          bit I2C_Write_Byte(unsigned char Byte)
  98          {
  99   1              unsigned char i;                // Variable to be used in for loop
 100   1              
 101   1              for(i=0;i<8;i++)                // Repeat for every bit
 102   1              {
 103   2                      Set_SCK_Low;            // Make SCK pin low
 104   2                      
 105   2                      __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
 106   2                                                                              // when it is confirm that SCK is low
 107   2      
 108   2                      if((Byte<<i)&0x80)  // Place data bit value on SDA pin
 109   2                              Set_SDA_High;   // If bit is high, make SDA high
 110   2                      else                            // Data is transferred MSB first
 111   2                              Set_SDA_Low;    // If bit is low, make SDA low
 112   2      
 113   2                      __delay_us(HalfBitDelay/2);     // Toggle SCK pin
 114   2                      Set_SCK_High;                           // So that slave can
 115   2                      __delay_us(HalfBitDelay);       // latch data bit
 116   2          }
 117   1                      
C51 COMPILER V9.06   I2C                                                                   04/14/2015 14:35:01 PAGE 3   

 118   1              // Get ACK from slave
 119   1              Set_SCK_Low;
 120   1          Set_SDA_High;
 121   1          __delay_us(HalfBitDelay);
 122   1          Set_SCK_High;
 123   1          __delay_us(HalfBitDelay);
 124   1      
 125   1              return SDA;
 126   1      }
 127          
 128          
 129          // Function Purpose: I2C_Read_Byte reads one byte
 130          unsigned char I2C_Read_Byte(void)
 131          {
 132   1              unsigned char i, d, RxData = 0;
 133   1      
 134   1              for(i=0;i<8;i++)
 135   1              {
 136   2                      Set_SCK_Low;                                    // Make SCK pin low
 137   2                      Set_SDA_High;                                   // Don't drive SDA 
 138   2                      __delay_us(HalfBitDelay);               // Half bit delay
 139   2                      Set_SCK_High;                                   // Make SCK pin high
 140   2                      __delay_us(HalfBitDelay/2);             // 1/4 bit delay
 141   2                      d = SDA;                                            // Capture Received Bit
 142   2                      RxData = RxData|(d<<(7-i));     // Copy it in RxData
 143   2                      __delay_us(HalfBitDelay/2);             // 1/4 bit delay
 144   2              }
 145   1       
 146   1          return RxData;                                              // Return received byte
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
